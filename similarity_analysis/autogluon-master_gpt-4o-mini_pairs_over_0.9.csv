node1_path,node1_summary,node2_path,node2_summary,similarity
\autogluon-master\common\setup.py,Script for setting up a Python package that dynamically loads version information and dependency requirements from a utility module to avoid code duplication.,\autogluon-master\eda\setup.py,"Setup script for a Python package that dynamically imports version and dependency information to avoid code duplication and defines installation requirements, including testing dependencies.",0.9153
\autogluon-master\common\src\autogluon\common\utils\context.py,Function `set_torch_num_threads`: A context manager that adjusts the number of threads for PyTorch during its execution and ensures the original setting is restored afterward.,\autogluon-master\tabular\src\autogluon\tabular\models\_utils\torch_utils.py,"Class `TorchThreadManager`: A context manager that allows the temporary adjustment of the number of threads used by PyTorch, ensuring the original setting is restored upon exiting the context.",0.9023
\autogluon-master\common\tests\conftest.py,"Functions for configuring pytest: `pytest_addoption` adds a command-line option for slow tests, `pytest_configure` sets up a marker for slow tests and adjusts mypy plugin arguments, and `pytest_collection_modifyitems` skips slow tests unless the `--runslow` option is used.",\autogluon-master\core\tests\conftest.py,"Functions for configuring pytest: `pytest_addoption` adds command-line options for slow and skipped tests, `pytest_configure` sets up custom markers and modifies mypy plugin arguments, and `pytest_collection_modifyitems` conditionally skips tests based on those options.",0.9326
\autogluon-master\common\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase and issues warnings if the number of violations surpasses a defined limit.,\autogluon-master\core\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in code and issues warnings for excessive style violations.,0.9229
\autogluon-master\common\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase and issues warnings if the number of violations surpasses a defined limit.,\autogluon-master\eda\tests\test_check_style.py,"Function `test_check_style`: A test function that checks the codebase for PEP8 style compliance, logs the results, and ensures that the number of style warnings remains within a defined limit.",0.9834
\autogluon-master\common\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase and issues warnings if the number of violations surpasses a defined limit.,\autogluon-master\features\tests\test_check_style.py,"Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase, logs the results, and ensures that the number of warnings remains below a defined threshold to maintain code quality.",0.9815
\autogluon-master\common\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase and issues warnings if the number of violations surpasses a defined limit.,\autogluon-master\multimodal\tests\test_check_style.py,"Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase, issuing warnings if violations exceed a defined threshold.",0.9937
\autogluon-master\common\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase and issues warnings if the number of violations surpasses a defined limit.,\autogluon-master\tabular\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in code by logging results and ensuring the number of warnings remains below a defined threshold.,0.9724
\autogluon-master\common\tests\unittests\test_import_version.py,"Function `test_import_version`: A test function that checks whether the version of the `autogluon.common` module is a valid, non-empty string.",\autogluon-master\core\tests\unittests\test_import_version.py,Function `test_import_version`: A test function that checks if the version of the autogluon.core module is a valid non-empty string.,0.9767
\autogluon-master\core\tests\conftest.py,"Functions for configuring pytest: `pytest_addoption` adds command-line options for slow and skipped tests, `pytest_configure` sets up custom markers and modifies mypy plugin arguments, and `pytest_collection_modifyitems` conditionally skips tests based on those options.",\autogluon-master\multimodal\tests\conftest.py,"Functions for configuring pytest: `pytest_addoption` adds command-line options for test categorization, `pytest_configure` sets up custom markers for test types, and `pytest_collection_modifyitems` conditionally skips tests based on these options.",0.9165
\autogluon-master\core\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in code and issues warnings for excessive style violations.,\autogluon-master\eda\tests\test_check_style.py,"Function `test_check_style`: A test function that checks the codebase for PEP8 style compliance, logs the results, and ensures that the number of style warnings remains within a defined limit.",0.9238
\autogluon-master\core\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in code and issues warnings for excessive style violations.,\autogluon-master\multimodal\tests\test_check_style.py,"Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase, issuing warnings if violations exceed a defined threshold.",0.9168
\autogluon-master\core\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in code and issues warnings for excessive style violations.,\autogluon-master\tabular\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in code by logging results and ensuring the number of warnings remains below a defined threshold.,0.9472
\autogluon-master\eda\tests\test_check_style.py,"Function `test_check_style`: A test function that checks the codebase for PEP8 style compliance, logs the results, and ensures that the number of style warnings remains within a defined limit.",\autogluon-master\features\tests\test_check_style.py,"Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase, logs the results, and ensures that the number of warnings remains below a defined threshold to maintain code quality.",0.9800
\autogluon-master\eda\tests\test_check_style.py,"Function `test_check_style`: A test function that checks the codebase for PEP8 style compliance, logs the results, and ensures that the number of style warnings remains within a defined limit.",\autogluon-master\multimodal\tests\test_check_style.py,"Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase, issuing warnings if violations exceed a defined threshold.",0.9831
\autogluon-master\eda\tests\test_check_style.py,"Function `test_check_style`: A test function that checks the codebase for PEP8 style compliance, logs the results, and ensures that the number of style warnings remains within a defined limit.",\autogluon-master\tabular\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in code by logging results and ensuring the number of warnings remains below a defined threshold.,0.9705
\autogluon-master\examples\automm\kaggle_feedback_prize\kaggle_feedback_prize_submit.py,Class ExportedBoundingBox: A proxy model of BoundingBox that provides methods to convert bounding box data into dictionary and tuple formats.,\autogluon-master\examples\automm\kaggle_pawpularity\kaggle_pawpularity_submit.py,Class ExportedBoundingBox: A proxy model of BoundingBox that provides methods to convert bounding box data into dictionary and tuple formats.,1.0000
\autogluon-master\features\tests\test_check_style.py,"Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase, logs the results, and ensures that the number of warnings remains below a defined threshold to maintain code quality.",\autogluon-master\multimodal\tests\test_check_style.py,"Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase, issuing warnings if violations exceed a defined threshold.",0.9857
\autogluon-master\features\tests\test_check_style.py,"Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase, logs the results, and ensures that the number of warnings remains below a defined threshold to maintain code quality.",\autogluon-master\tabular\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in code by logging results and ensuring the number of warnings remains below a defined threshold.,0.9684
\autogluon-master\multimodal\src\autogluon\multimodal\configs\pretrain\detection\yolox\yolox_l_8xb8-300e_coco.py,"Model Configuration: Defines a YOLOX model with specified backbone, neck, and bounding box head settings for object detection tasks.",\autogluon-master\multimodal\src\autogluon\multimodal\configs\pretrain\detection\yolox\yolox_m_8xb8-300e_coco.py,"Model configuration for a YOLOX object detection framework, specifying the backbone, neck, and bounding box head settings with adjusted deepen and widen factors.",0.9422
\autogluon-master\multimodal\src\autogluon\multimodal\configs\pretrain\detection\yolox\yolox_l_8xb8-300e_coco.py,"Model Configuration: Defines a YOLOX model with specified backbone, neck, and bounding box head settings for object detection tasks.",\autogluon-master\multimodal\src\autogluon\multimodal\configs\pretrain\detection\yolox\yolox_x_8xb8-300e_coco.py,"Model Configuration: Defines a YOLOX model with specific backbone, neck, and bounding box head settings for object detection tasks.",0.9985
\autogluon-master\multimodal\src\autogluon\multimodal\configs\pretrain\detection\yolox\yolox_m_8xb8-300e_coco.py,"Model configuration for a YOLOX object detection framework, specifying the backbone, neck, and bounding box head settings with adjusted deepen and widen factors.",\autogluon-master\multimodal\src\autogluon\multimodal\configs\pretrain\detection\yolox\yolox_x_8xb8-300e_coco.py,"Model Configuration: Defines a YOLOX model with specific backbone, neck, and bounding box head settings for object detection tasks.",0.9404
\autogluon-master\multimodal\src\autogluon\multimodal\predictor.py,"Class and functions for a machine learning model: Provides initialization, configuration, training, evaluation, and inference methods, along with utilities for managing model artifacts and optimizing performance.",\autogluon-master\tabular\src\autogluon\tabular\learner\abstract_learner.py,"Class and functions related to a machine learning model: The functions facilitate model initialization, feature handling, validation, predictions, scoring, and performance evaluation, while also providing utilities for data transformation and model management.",0.9288
\autogluon-master\multimodal\tests\test_check_style.py,"Function `test_check_style`: A test function that verifies PEP8 style compliance in the codebase, issuing warnings if violations exceed a defined threshold.",\autogluon-master\tabular\tests\test_check_style.py,Function `test_check_style`: A test function that verifies PEP8 style compliance in code by logging results and ensuring the number of warnings remains below a defined threshold.,0.9681
\autogluon-master\tabular\src\autogluon\tabular\models\catboost\hyperparameters\searchspaces.py,"Functions for configuring hyperparameter search spaces tailored to various problem types, including binary, multiclass, and regression models.",\autogluon-master\tabular\src\autogluon\tabular\models\fastainn\hyperparameters\searchspaces.py,"Functions for defining and retrieving various search space configurations for hyperparameters in machine learning models, accommodating binary, multiclass, regression, and quantile scenarios.",0.9038
\autogluon-master\tabular\src\autogluon\tabular\models\fastainn\hyperparameters\parameters.py,"Functions for retrieving baseline parameters for various machine learning problem types, including binary, multiclass, regression, and quantile, with specific configurations for hyperparameters and defaults.",\autogluon-master\tabular\src\autogluon\tabular\models\xgboost\hyperparameters\parameters.py,"Functions for generating and retrieving baseline parameters for machine learning models, including support for binary, multiclass, softclass, and regression scenarios, with customizable settings.",0.9333
\autogluon-master\tabular\src\autogluon\tabular\models\fastainn\hyperparameters\searchspaces.py,"Functions for defining and retrieving various search space configurations for hyperparameters in machine learning models, accommodating binary, multiclass, regression, and quantile scenarios.",\autogluon-master\tabular\src\autogluon\tabular\models\tabular_nn\hyperparameters\searchspaces.py,"Functions for generating default and specific search spaces of hyperparameters tailored to various machine learning problem types and frameworks, including multi-class, binary, regression, and quantile regression scenarios.",0.9341
\autogluon-master\tabular\src\autogluon\tabular\models\rf\compilers\native.py,"Class `AbstractNativeCompiler`: A static class that provides methods for compiling, saving, and loading native models to enhance inference efficiency.",\autogluon-master\tabular\src\autogluon\tabular\models\tabular_nn\compilers\native.py,"Class AbstractNativeCompiler: A base class for compiling and managing native models for optimized inference, featuring methods for compilation, saving, and loading model data, along with a utility function that indicates compilation capability and handles model serialization.",0.9629
